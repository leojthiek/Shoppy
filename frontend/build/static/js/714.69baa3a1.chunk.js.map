{"version":3,"file":"static/js/714.69baa3a1.chunk.js","mappings":"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","sources":["screens/CouponScreen.js"],"sourcesContent":["import React from \"react\"\nimport { Row, Col, Table, Button } from \"react-bootstrap\"\nimport  {useNavigate} from 'react-router-dom'\nimport { deleteCouponAction, getAllCoupons } from \"../redux/action/couponAction\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../component/loader\"\nimport Message from \"../component/message\"\nimport AdminSidebar from \"../component/adminSidebar\"\nimport { Offcanvas } from \"react-bootstrap\"\nimport { useMediaQuery } from \"@mui/material\"\n\nexport default function CouponScreen() {\n\n\n  const [show, setShow] = React.useState(false)\n  const isSmallScreen = useMediaQuery(\"(max-width:987px)\")\n  const dispatch = useDispatch()\n  const navigate=useNavigate()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  \n  const couponList = useSelector((state) => state.couponList)\n  const { loading, error, coupons } = couponList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const addCoupon = useSelector((state) => state.addCoupon)\n  const { success } = addCoupon\n\n  const couponDelete = useSelector((state) => state.couponDelete)\n  const {\n    error: deleteError,\n    loading:deleteLoading,\n    success: deleteSuccess,\n  } = couponDelete\n\n\n  React.useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllCoupons())\n    }\n  }, [dispatch, userInfo,deleteSuccess,success])\n\n  const handleDelete=(id)=>{\n    if (window.confirm(\"Do you want to delete this coupon completely\")) {\n        dispatch(deleteCouponAction(id))\n  }\n}\nconst handleClick=()=>{\n    navigate('/admin/coupon/create')\n}\n\n\n\n  return (\n    <Row>\n      {isSmallScreen ? ( // render offcanvas component only for small screens\n        <div>\n          <Button\n            className='sidebar-menu'\n            variant='primary'\n            onClick={handleShow}\n          >\n            menu\n          </Button>\n\n          <Offcanvas show={show} onHide={handleClose}>\n            <Offcanvas.Header closeButton></Offcanvas.Header>\n            <Offcanvas.Body>\n              <AdminSidebar />\n            </Offcanvas.Body>\n          </Offcanvas>\n        </div>\n      ) : (\n        <Col md={2}>\n          <AdminSidebar />\n        </Col>\n      )}\n      <Col md={10}>\n    <div className=\"coupon-main\">\n      <Row>\n        <Col>\n          <h4 className='couponscreen-title'>Coupon List</h4>\n        </Col>\n        <Col className='d-flex justify-content-end'>\n          <Button onClick={handleClick} className='my-3'>\n            <i className='fas fa-plus'></i> Create New Coupon\n          </Button>\n        </Col>\n      </Row>\n\n      {deleteLoading && <Loader/>}\n      {deleteError && <Message variant='danger'>{deleteError}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table bordered hover responsive className='table-sm'>\n          <thead>\n            <tr className=\"couponscreen-table-head\">\n              <td> COUPON CODE</td>\n              <td>PRODUCT ID</td>\n              <td>DISCOUNT</td>\n              <td>DISCOUNT TYPE</td>\n              <td>EXPIRATION DATE</td>\n              <td>STATUS</td>\n\n\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {coupons.map((coupon) => (\n              <tr key={coupon._id} className=\"couponscreen-table-main\">\n                <td>{coupon.name}</td>\n                <td>{coupon.product}</td>\n                <td>{coupon.discountAmount}</td>\n                <td>{coupon.discountType}</td>\n                <td>{coupon.expirationDate.slice(0,10)}</td>\n                <td>\n                  {new Date(coupon.expirationDate).getTime() >\n                  new Date().getTime() ? (\n                    <i className='fas fa-circle text-success'></i>\n                  ) : (\n                    <i className='fas fa-circle text-danger'></i>\n                  )}\n                </td>\n              \n                <td>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => handleDelete(coupon._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n    </Col>\n    </Row>\n  )\n}\n"],"names":["CouponScreen","_React$useState","React","_React$useState2","_slicedToArray","show","setShow","isSmallScreen","useMediaQuery","dispatch","useDispatch","navigate","useNavigate","couponList","useSelector","state","loading","error","coupons","userInfo","userLogin","success","addCoupon","couponDelete","deleteError","deleteLoading","deleteSuccess","isAdmin","getAllCoupons","_jsxs","Row","children","_jsx","Button","className","variant","onClick","Offcanvas","onHide","closeButton","AdminSidebar","Col","md","Loader","Message","Table","bordered","hover","responsive","map","coupon","name","product","discountAmount","discountType","expirationDate","slice","Date","getTime","id","_id","window","confirm","deleteCouponAction"],"sourceRoot":""}