{"version":3,"file":"static/js/936.a0567cf3.chunk.js","mappings":"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","sources":["screens/AllOrderScreen.js"],"sourcesContent":["import React from \"react\"\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { Table, Button, Col,Row } from \"react-bootstrap\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader from \"../component/loader\"\nimport Message from \"../component/message\"\nimport { allOrderListAction } from \"../redux/action/orderAction\"\nimport AdminSidebar from \"../component/adminSidebar\"\nimport { Offcanvas } from \"react-bootstrap\"\nimport { useMediaQuery } from \"@mui/material\"\n\nexport default function AllOrderListScreen() {\n\n  const [show, setShow] = React.useState(false)\n  const isSmallScreen = useMediaQuery(\"(max-width:987px)\")\n\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const allOrders = useSelector((state) => state.allOrders)\n  const { orders, error, loading } = allOrders\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  React.useEffect(() => {\n\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(allOrderListAction())\n    } else {\n      navigate(\"/login\")\n    }\n\n  }, [dispatch, navigate, userInfo])\n\n  return (\n    <Row>\n      {isSmallScreen ? ( // render offcanvas component only for small screens\n        <div>\n          <Button\n            className='sidebar-menu'\n            variant='primary'\n            onClick={handleShow}\n          >\n            menu\n          </Button>\n\n          <Offcanvas show={show} onHide={handleClose}>\n            <Offcanvas.Header closeButton></Offcanvas.Header>\n            <Offcanvas.Body>\n              <AdminSidebar />\n            </Offcanvas.Body>\n          </Offcanvas>\n        </div>\n      ) : (\n        <Col md={2}>\n          <AdminSidebar />\n        </Col>\n      )}\n    <Col md={10}>\n    <div className=\"pt-4\">\n    <h1 className=\"orderlist-title\">Orders list :</h1>\n\n    </div>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table  bordered hover responsive className='table-sm'>\n          <thead>\n            <tr className=\"orderlist-head\">\n              <td>ID</td>\n              <td>USER</td>\n              <td>DATE</td>\n              <td>TOTAL</td>\n              <td>PAID</td>\n              <td>DELIVERED</td>\n\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id} className=\"orderlist-row\">\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n\n                <td>{order.createdAt?.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                 <td>\n                  {order.isPaid ? (\n                      <i className=\"fas fa-check\"></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    <i className=\"fas fa-check\"/>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: \"red\" }}></i>\n                  )}\n                </td> \n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      \n                      Details\n                      \n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n      </Col>\n    </Row>\n  )\n}\n"],"names":["AllOrderListScreen","_React$useState","React","_React$useState2","_slicedToArray","show","setShow","isSmallScreen","useMediaQuery","dispatch","useDispatch","navigate","useNavigate","allOrders","useSelector","state","orders","error","loading","userInfo","userLogin","isAdmin","allOrderListAction","_jsxs","Row","children","_jsx","Button","className","variant","onClick","Offcanvas","onHide","closeButton","AdminSidebar","Col","md","Loader","Message","Table","bordered","hover","responsive","map","order","_order$createdAt","_id","user","name","createdAt","substring","totalPrice","isPaid","style","color","isDelivered","LinkContainer","to","concat"],"sourceRoot":""}