{"version":3,"file":"static/js/380.34256b77.chunk.js","mappings":"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","sources":["screens/OfferListScreen.js"],"sourcesContent":["import React from \"react\"\nimport { Row, Col, Table, Button } from \"react-bootstrap\"\nimport { useNavigate } from \"react-router-dom\"\nimport { deleteOfferAction, getAllOffer } from \"../redux/action/offerAction\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader from \"../component/loader\"\nimport Message from \"../component/message\"\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport AdminSidebar from \"../component/adminSidebar\"\nimport { Offcanvas } from \"react-bootstrap\"\nimport { useMediaQuery } from \"@mui/material\"\n\nexport default function OfferListScreen() {\n\n  const [show, setShow] = React.useState(false)\n  const isSmallScreen = useMediaQuery(\"(max-width:987px)\")\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n\n  const offerList = useSelector((state) => state.offerList)\n  const { loading, error, offers } = offerList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const createOffer = useSelector((state) => state.createOffer)\n  const { success } = createOffer\n\n  const offerDelete = useSelector((state) => state.offerDelete)\n  const {\n    error: deleteError,\n    loading: deleteLoading,\n    success: deleteSuccess,\n  } = offerDelete\n\n  React.useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllOffer())\n    }\n  }, [dispatch, userInfo, deleteSuccess, success])\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"Do you want to delete this coupon completely\")) {\n      dispatch(deleteOfferAction(id))\n    }\n  }\n  const handleClick = () => {\n    navigate(\"/admin/offer/create\")\n  }\n\n  return (\n    <Row>\n       {isSmallScreen ? ( // render offcanvas component only for small screens\n        <div>\n          <Button\n            className='sidebar-menu'\n            variant='primary'\n            onClick={handleShow}\n          >\n            menu\n          </Button>\n\n          <Offcanvas show={show} onHide={handleClose}>\n            <Offcanvas.Header closeButton></Offcanvas.Header>\n            <Offcanvas.Body>\n              <AdminSidebar />\n            </Offcanvas.Body>\n          </Offcanvas>\n        </div>\n      ) : (\n        <Col md={2}>\n          <AdminSidebar />\n        </Col>\n      )}\n      <Col md={10}>\n        <div className='coupon-main'>\n          <Row>\n            <Col>\n              <h4 className='couponscreen-title'>Offer List</h4>\n            </Col>\n            <Col className='d-flex justify-content-end'>\n              <Button onClick={handleClick} className='my-3'>\n                <i className='fas fa-plus'></i> Create New Offer\n              </Button>\n            </Col>\n          </Row>\n\n          {deleteLoading && <Loader />}\n          {deleteError && <Message variant='danger'>{deleteError}</Message>}\n\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant='danger'>{error}</Message>\n          ) : (\n            <Table bordered hover responsive className='table-sm'>\n              <thead>\n                <tr className='couponscreen-table-head'>\n                  <td>OFFER ID</td>\n                  <td>OFFER TITLE</td>\n                  <td>CATEGORY</td>\n                  <td>DISCOUNT PERCENTAGE</td>\n                  <td>STATUS</td>\n\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {offers.map((offer) => (\n                  <tr key={offer._id} className='couponscreen-table-main'>\n                    <td>{offer._id}</td>\n                    <td>{offer.title}</td>\n                    <td>{offer.category}</td>\n                    <td>{offer.discountPercentage}</td>\n                    <td>\n                      {new Date(offer.endDate).getTime() >\n                      new Date().getTime() ? (\n                        <i className='fas fa-circle text-success'></i>\n                      ) : (\n                        <i className='fas fa-circle text-danger'></i>\n                      )}\n                    </td>\n\n                    <td>\n                      <LinkContainer to={`/admin/offer/${offer._id}`}>\n                        <Button\n                          variant='light'\n                          className='btn-sm'\n                          style={{ color: \"black\" }}\n                        >\n                          <i className='fas fa-edit'></i>\n                        </Button>\n                      </LinkContainer>\n                      &nbsp;\n                      <Button\n                        variant='danger'\n                        className='btn-sm'\n                        onClick={() => handleDelete(offer._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </div>\n      </Col>\n    </Row>\n  )\n}\n"],"names":["OfferListScreen","_React$useState","React","_React$useState2","_slicedToArray","show","setShow","isSmallScreen","useMediaQuery","dispatch","useDispatch","navigate","useNavigate","offerList","useSelector","state","loading","error","offers","userInfo","userLogin","success","createOffer","offerDelete","deleteError","deleteLoading","deleteSuccess","isAdmin","getAllOffer","_jsxs","Row","children","_jsx","Button","className","variant","onClick","Offcanvas","onHide","closeButton","AdminSidebar","Col","md","Loader","Message","Table","bordered","hover","responsive","map","offer","_id","title","category","discountPercentage","Date","endDate","getTime","LinkContainer","to","concat","style","color","id","window","confirm","deleteOfferAction"],"sourceRoot":""}